#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e

BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
STDLIB_FILE=$(mktemp -t stdlib.XXXXX)

curl --silent --retry 5 --retry-max-time 15 'https://lang-common.s3.amazonaws.com/buildpack-stdlib/v7/stdlib.sh' > "$STDLIB_FILE"
source "$STDLIB_FILE"
source $BP_DIR/lib/binaries.sh
source $BP_DIR/lib/failure.sh
source $BP_DIR/lib/environment.sh

export PATH="$BUILD_DIR/.heroku/node/bin":$PATH

build_dir=$1
cache_dir=$2
env_dir=$3
bp_dir=$(dirname $(dirname $0))
mkdir -p "$BUILD_DIR/.heroku/node/"

export_env_dir $ENV_DIR

fetch_nginx_tarball() {
    local version="1.9.7"
    local tarball_file="nginx-$version.tgz"
    local stack="cedar-14"
    local nginx_tarball_url="https://s3-external-1.amazonaws.com/heroku-buildpack-ruby/nginx/$stack/nginx-$version-ngx_mruby.tgz"
    local dest_path="$cache_dir/$stack/$tarball_file"

    if [ -f "$dest_path" ]; then
        echo -n "cat $dest_path"
    else
        echo -n "curl -L $nginx_tarball_url"
    fi
}

mkdir -p $build_dir/bin
$(fetch_nginx_tarball) | tar xzC $build_dir/bin
nginx_version=$($build_dir/bin/nginx-$STACK -V 2>&1 | head -1 | awk '{ print $NF }')
cp -a $bp_dir/scripts/{boot,config} -t $build_dir/bin/
echo "-----> Installed ${nginx_version} to /app/bin"

mkdir -p $build_dir/config
cp $bp_dir/scripts/config/templates/mime.types $build_dir/config

mkdir -p $build_dir/logs

echo "-----> Install Node"
install_nodejs "8.x" "$BUILD_DIR/.heroku/node"

echo "-----> Building Ember App"
# Build the ember app
cd $build_dir
npm i
npx ember build -e production
echo "-----> Finished Building Ember App"

exit 0
